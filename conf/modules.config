process {

    withName: 'EDTA:CUSTOM_SHORTENFASTAIDS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->  ( filename.equals('versions.yml') || filename.endsWith('fasta') ) ? null : filename }
        ]
    }

    withName: 'EDTA:LTRHARVEST' {
        ext.args = '-size 1000000 -time 300'
        ext.prefix = { "${meta.id}_ltrharvest" }
    }
    
    withName: 'EDTA:LTRFINDER' {
        ext.args = '-harvest_out -size 1000000 -time 300'
    }

    withName: 'EDTA:CAT_CAT' {
        ext.prefix = { "${meta.id}_ltrharvest_ltrfinder.tabout" }
    }

    withName: 'EDTA:ANNOSINE' {
        ext.prefix = { "${meta.id}.annosine" }
        ext.args = params.annosine_ext_args ?: '-a 2 --num_alignments 50000 -rpm 0 --copy_number 3 --shift 100 -auto 1'
    }

    withName: 'EDTA:REPEATMODELER_REPEATMODELER' {
        ext.args = '-engine ncbi'
    }

    withName: 'EDTA:TIRLEARNER' {
        ext.prefix = { "${meta.id}.tirlearner" }
    }

    withName: 'EDTA:FASTA_HELITRONSCANNER_SCAN_DRAW:HELITRONSCANNER_DRAW' {
        ext.args = '-pure_helitron'
    }

    withName: 'EDTA:FASTA_HELITRONSCANNER_SCAN_DRAW:HELITRONSCANNER_SCAN_HEAD_RC' {
        ext.prefix = { "${meta.id}.rc" }
        ext.args = '--rc'
    }

    withName: 'EDTA:FASTA_HELITRONSCANNER_SCAN_DRAW:HELITRONSCANNER_SCAN_TAIL_RC' {
        ext.prefix = { "${meta.id}.rc" }
        ext.args = '--rc'
    }

    withName: 'EDTA:FASTA_HELITRONSCANNER_SCAN_DRAW:HELITRONSCANNER_DRAW_RC' {
        ext.prefix = { "${meta.id}.rc" }
        ext.args = '-pure_helitron'
    }

    withName: 'EDTA:FORMAT_HELITRONSCANNER_OUT' {
        ext.args = '-sitefilter 1 -minscore 12 -keepshorter 1 -extout 0'
    }

    withName: 'EDTA:FORMAT_HELITRONSCANNER_OUT_EXT' {
        ext.args = '-sitefilter 1 -minscore 12 -keepshorter 1 -extlen 30 -extout 1'
    }

    withName: 'EDTA:FINAL_FILTER' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->

                if ( filename.equals('versions.yml') ) { return null }

                if ( filename.endsWith('gff3') && meta.changed_ids ) { return null }

                filename
            }
        ]
    }

    withName: 'EDTA:CUSTOM_RESTOREGFFIDS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
}