// Global default params, used in configs
params {
    // Input/output options
    genome                      = null
    anno                        = false
    publish_raw_filtered_libs   = false
    publish_stage1_libs         = false
    outdir                      = null

    // General options
    species                     = 'others'
    maxdiv                      = 40
    line_detection_tool         = 'rm2'

    // CLI arguments for tools
    annosine_ext_args           = null
    
    // Boilerplate options
    version                     = false
    publish_dir_mode            = 'copy'
}

// Max resources
process {
    resourceLimits = [
        cpus: 16,
        memory: '72.GB',
        time: '7.day'
    ]
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

apptainer.registry              = 'quay.io'
docker.registry                 = 'quay.io'
podman.registry                 = 'quay.io'
singularity.registry            = 'quay.io'
charliecloud.registry           = 'quay.io'

env {
    PYTHONNOUSERSITE            = 1
    R_PROFILE_USER              = "/.Rprofile"
    R_ENVIRON_USER              = "/.Renviron"
    JULIA_DEPOT_PATH            = "/usr/local/share/julia"
}

process.shell = """\
bash

set -e # Exit if a tool returns a non-zero status/exit code
set -u # Treat unset variables and parameters as an error
set -o pipefail # Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
set -C # No clobber - prevent output redirection from overwriting files.
"""

nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name                        = 'oushujun/EDTA'
    description                 = 'Extensive de-novo TE Annotator'
    version                     = '3.0.0dev'
    nextflowVersion             = '!>=24.10.1'
    contributors                = [
        [
            name                : 'Shujun Ou',
            affiliation         : 'Ohio State University',
            github              : 'https://github.com/oushujun',
            contribution        : 'author',
            orcid               : 'https://orcid.org/0000-0001-5938-7180'
        ],
        [
            name                : 'Usman Rashid',
            affiliation         : 'Plant & Food Research',
            github              : 'https://github.com/GallVp',
            contribution        : 'contributor',
            orcid               : 'https://orcid.org/0000-0002-1109-5493'
        ],
        [
            name                : 'Joseph Guhlin',
            affiliation         : 'Dunedin, New Zealand',
            github              : 'https://github.com/jguhlin',
            contribution        : 'contributor',
            orcid               : 'https://orcid.org/0000-0003-3264-7178'
        ]
    ]
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <conda/docker/singularity/...> --genome <genome.fasta/genomes.txt> --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"

    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
