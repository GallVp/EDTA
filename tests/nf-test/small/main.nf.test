nextflow_pipeline {

    name "Test with a small genome"
    script "main.nf"

    test("small genome") {

        when {
            params {
                genome  = "https://raw.githubusercontent.com/oushujun/EDTA/4f0424b8a3ce2caccdd51b4021c61a536fa9ead9/test/genome.fa"
                anno    = true
                outdir  = "$outputDir"
            }
        }

        then {

            def stable_path = getAllFilesFromDir(
                params.outdir,
                false,
                [
                    'pipeline_info/*.{html,json,txt,yml}',
                    'genome/*.intact.fa',
                    'genome/*.intact.gff3',
                    'genome/*.TElib.fa',
                    'genome/*.TEanno.gff3'
                ],
                null,
                ['**']
            )

            def stable_name = getAllFilesFromDir(
                params.outdir,
                true,
                [
                    'pipeline_info/*.{html,json,txt,yml}'
                ],
                null,
                ['**']
            )

            def te_lib_count = file("$outputDir/genome/genome.TElib.fa").readLines().findAll { it.startsWith('>') }.size()
            def intact_lib_count = file("$outputDir/genome/genome.intact.fa").readLines().findAll { it.startsWith('>') }.size()

            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    [
                        'successful tasks': workflow.trace.succeeded().size(),
                        'versions': removeNextflowVersion("$outputDir/pipeline_info/software_versions.yml"),
                        'stable paths': stable_path,
                        'stable names': getRelativePath(stable_name, outputDir)
                    ]
                ).match() },
                { assert Math.abs(te_lib_count - 45) <= 5.0 },
                { assert Math.abs(intact_lib_count - 42) <= 5.0 }
            )
        }

    }

}
