nextflow_pipeline {

    name "Test with a small genome"
    script "main.nf"

    test("small genome") {

        when {
            params {
                genome  = "https://raw.githubusercontent.com/jguhlin/EDTA/a2cd9a0777e4ac6e39545bacc3e752f94eb2f389/test/genome.fa"
                outdir  = "$outputDir"
            }
        }

        then {

            def stable_path = getAllFilesFromDir(
                params.outdir,
                false,
                [
                    'pipeline_info/*.{html,json,txt,yml}',
                    'raw/ltr/*.pp.LTR.intact.raw.gff3',
                    'raw/ltr/*.pp.LTR.raw.fa',
                    'raw/tir/*.pp.TIR.intact.raw.fa',
                    'raw/tir/*.pp.TIR.intact.raw.gff3',
                    'raw/line/*.pp.LINE.raw.fa',
                    'raw/line/*.pp.RM2.fa',
                    'raw/helitron/*.Helitron.intact.raw.fa',
                    'raw/helitron/*.Helitron.intact.raw.fa.anno.list',
                    'raw/helitron/*.Helitron.intact.raw.gff3'
                ],
                null,
                ['**']
            )

            def stable_name = getAllFilesFromDir(
                params.outdir,
                true,
                [
                    'pipeline_info/*.{html,json,txt,yml}'
                ],
                null,
                ['**']
            )

            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    [
                        'successful tasks': workflow.trace.succeeded().size(),
                        'versions': removeNextflowVersion("$outputDir/pipeline_info/software_versions.yml"),
                        'stable paths': stable_path,
                        'stable names': getRelativePath(stable_name, outputDir),
                    ]
                ).match() }
            )
        }

    }

}
